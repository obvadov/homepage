{"version":3,"sources":["components/Header/Header.js","components/Languages/LanguageItem.js","components/Languages/Languages.js","components/Achievements/AchievmentsItem.js","components/Achievements/Achievements.js","components/WorkExperience/WorkExperienceItem.js","components/WorkExperience/WorkExperience.js","components/Contacts/ContactsItem.js","components/Contacts/Contacts.js","components/Backdrop/Backdrop.js","components/BufferingMode/BufferingMode.js","reducers/characterReducer.js","reducers/pageStagesReducer.js","components/MainDataShow.js","services/characters.js","reportWebVitals.js","index.js","components/MainDataShow.module.css"],"names":["Header","position","nickname","imageURI","specialtyDescription","setChangeCharacter","id","className","href","options","strings","autoStart","loop","src","alter","alt","onClick","LanguageItem","i_type","language","description","Languages","languagesFromDb","languages","map","lan","AchievmentItem","statsTitle","statsValue","Achievements","achievmentsList","achievments","ach","WorkExperienceItem","years","WorkExperience","workExperienceFromDb","workExperienceListSource","work","ContactItem","caption","target","Contacts","contactsFromDb","developedBy","contactsListSource","contact","dangerouslySetInnerHTML","__html","Backdrop","classes","backdrop","BufferingMode","characterReducer","state","action","type","payload","pageStagesReducer","isLoading","changeCharacter","MainDataShow","props","useState","setDevelopedBy","useReducer","characterR","dispatchCharacterR","pageStagesR","despatchPageStagesR","useEffect","fetch","then","data","json","character","image_uri","specialty_description","workExperience","contacts","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.761b8457.chunk.js","sourcesContent":["import React from \"react\";\nimport Typewriter from \"typewriter-effect\";\n\nconst Header = ({\n  position = [],\n  nickname,\n  imageURI,\n  specialtyDescription,\n  setChangeCharacter,\n}) => {\n  const changeCharacterHandler = () => {\n    setChangeCharacter();\n  };\n\n  return (\n    <>\n      <header id=\"header-main\">\n        <div className=\"container\">\n          <nav id=\"top-nav\">\n            <ul>\n              <li className=\"current\">\n                <a href=\"#\">Home</a>\n              </li>\n              <li>\n                <a href=\"#home-languages\">Languages</a>\n              </li>\n              <li>\n                <a href=\"#contacts\">Contacts</a>\n              </li>\n            </ul>\n          </nav>\n          <div id=\"header-content\">\n            <div id=\"character_base_info\">\n              <h1>\n                I am {nickname} <br />\n                the\n                <span id=\"txt-type\">\n                  <Typewriter\n                    options={{\n                      strings: position,\n                      autoStart: true,\n                      loop: true,\n                    }}\n                  />\n                </span>\n              </h1>\n              <p className=\"specialty-description\">\n                I specialize in {specialtyDescription}\n              </p>\n            </div>\n\n            <div id=\"character_img\">\n              <img\n                src={`characters/${imageURI}`}\n                alter=\"logo\"\n                alt=\"\"\n                id=\"logo\"\n              />\n            </div>\n          </div>\n          <div className=\"random_button\">\n            <h1>Lookin' for someone else?</h1>\n            <button onClick={changeCharacterHandler} className=\"btn-light\">\n              Try Random Candidate\n            </button>\n          </div>\n        </div>\n      </header>\n    </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst LanguageItem = ({i_type, language, description}) => {\n  return (\n    <div>\n      <i className={`fas ${i_type}`}></i>\n      <h3>{language}</h3>\n      <p>{description}</p>\n    </div>\n  );\n};\n\nexport default LanguageItem;\n","import React from \"react\";\nimport LanguageItem from \"./LanguageItem\";\n\n//@TODO server request implement\nconst Languages = ({languages: languagesFromDb}) => {\n  if (!languagesFromDb) languagesFromDb = [];\n\n  return (\n    <>\n      <section id=\"home-languages\" className=\"text-center\">\n        <div className=\"container\">\n          <h2 className=\"section-title\">LANGUAGES</h2>\n          <div className=\"bline\"></div>\n          <p className=\"lead\">\n            Many languages spread through the galaxy, but some of them the most\n            used. I'm so talented in:\n          </p>\n          <div className=\"languages\">\n            {languagesFromDb.map((lan) => (\n              <LanguageItem key={lan.i_type} {...lan} />\n            ))}\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Languages;\n","import React from \"react\";\n\nconst AchievmentItem = ({i_type, statsTitle, statsValue}) => {\n  return (\n    <div>\n      <ul>\n        <li>\n          <i className={i_type}></i>\n        </li>\n        <li className=\"stats-title\">{statsTitle}</li>\n        <li className=\"stats-value\">{statsValue}</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default AchievmentItem;\n","import React from \"react\";\nimport AchievmentItem from \"./AchievmentsItem\";\n\nconst Achievements = ({achievments: achievmentsList}) => {\n  if (!achievmentsList) achievmentsList = [];\n\n  return (\n    <section id=\"home-statistics\" className=\"text-center\">\n      <div className=\"statistics\">\n        {achievmentsList.map((ach) => (\n          <AchievmentItem key={ach.statsTitle} {...ach} />\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default Achievements;\n","import React from \"react\";\n\nconst WorkExperienceItem = ({position, years, description}) => {\n  return (\n    <div>\n      <ul>\n        <li className=\"position_title\">{position}</li>\n        <li className=\"position_years\">{years}</li>\n        <li className=\"position_description\">{description}</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default WorkExperienceItem;\n","import React from \"react\";\nimport WorkExperienceItem from \"./WorkExperienceItem\";\n\nconst WorkExperience = ({workExperienceFromDb}) => {\n  //@TODO: add fields to firebase entities\n  const dummyWorkExperienceList = [\n    {\n      position: \"Lead Invader\",\n      years: \"3030-3037\",\n      description: `Implement the dangerous dotted-atack system and gain a title of\n            Invider of the Year`,\n    },\n    {\n      position: \"Strategy Developer\",\n      years: \"3038-3047\",\n      description: `Development of strategies, tactics, maneuvers and other methods\n            of combat`,\n    },\n    {\n      position: \"escape from captivity\",\n      years: \"3040\",\n      description: `Application of the acquired experience. successful sabotage\n            operation`,\n    },\n    {\n      position: \"Team Lead. Coach\",\n      years: \"3045-3047\",\n      description: `Conducting coaching activities. Preparation of elite units,\n            record keeping`,\n    },\n  ];\n\n  // @TODO: add fields to firebase. For now using dummy data\n  const workExperienceListSource = workExperienceFromDb\n    ? workExperienceFromDb\n    : dummyWorkExperienceList;\n\n  return (\n    <section id=\"work-experience\" className=\"text-center\">\n      <div className=\"container\">\n        <h2 className=\"section-title\">WORK EXPERIENCE</h2>\n        <div className=\"bline\"></div>\n        <p className=\"lead\">I'd like to share some acts I'm proud of:</p>\n\n        <div className=\"experince-list text-left\">\n          {workExperienceListSource.map((work) => (\n            <WorkExperienceItem key={work.position} {...work} />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default WorkExperience;\n","const ContactItem = ({href, caption, i_type}) => {\n  return (\n    <div>\n      <a href={href} target=\"_blank\">\n        <i className={i_type}></i>\n        {caption}\n      </a>\n    </div>\n  );\n};\n\nexport default ContactItem;\n","import React from \"react\";\nimport ContactItem from \"./ContactsItem\";\n\nconst Contacts = ({contactsFromDb, developedBy}) => {\n  //@TODO: add fields to firebase entities\n  const dummyContactsFromDB = [\n    {\n      href: \"http://twitter.com\",\n      i_type: \"fab fa-twitter\",\n      caption: \"Twitter\",\n    },\n    {\n      href: \"http://instagram.com\",\n      i_type: \"fab fa-instagram\",\n      caption: \"Instagram\",\n    },\n    {\n      href: \"http://facebook.com\",\n      i_type: \"fab fa-facebook\",\n      caption: \"Facebook\",\n    },\n    {\n      href: \"http://linkedIn.com\",\n      i_type: \"fab fa-linkedin\",\n      caption: \"LinkedIn\",\n    },\n  ];\n\n  // @TODO: add fields to firebase. For now using dummy data\n  const contactsListSource = contactsFromDb\n    ? contactsFromDb\n    : dummyContactsFromDB;\n\n  return (\n    <section id=\"contacts\" className=\"text-center\">\n      <div className=\"container\">\n        <h2 className=\"section-title\">Contacts</h2>\n        <div className=\"bline\"></div>\n        <p className=\"lead\">\n          Still want to contact me? <i className=\"far fa-smile-wink\"></i>\n        </p>\n\n        <div className=\"contacts-list text-center\">\n          {contactsListSource.map((contact) => (\n            <ContactItem key={contact.i_type} {...contact} />\n          ))}\n        </div>\n        <div id=\"developer\">\n          <span>developed by {developedBy}</span>{\" \"}\n          <span dangerouslySetInnerHTML={{__html: \"&copy;\"}} /> 2021\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Contacts;\n","const Backdrop = ({classes}) => {\n  return (\n    <div className={classes.backdrop}>\n      <div className=\"loadingio-spinner-eclipse-vemjarnv02i\">\n        <div className=\"ldio-i5vxo0f2rtf\">\n          <div></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Backdrop;\n","import ReactDOM from \"react-dom\";\nimport Backdrop from \"../../components/Backdrop/Backdrop\";\n\nconst BufferingMode = ({classes}) => {\n  return (\n    <>\n      ReactDOM.createPortal(\n      <Backdrop classes={classes} />, document.getElementById('backdrop-root'))\n    </>\n  );\n};\n\nexport default BufferingMode;\n","import React from \"react\";\n\nconst characterReducer = (state, action) => {\n  switch (action.type) {\n    case \"INIT_CHARACTER\":\n      return {...action.payload};\n\n      break;\n\n    default:\n      return {};\n  }\n};\n\nexport {characterReducer};\n","import React from \"react\";\n\nconst pageStagesReducer = (state, action) => {\n  switch (action.type) {\n    case \"INIT_PAGE\":\n      return {isLoading: true, changeCharacter: false};\n      break;\n\n    case \"CHANGE_CHARACTER\":\n      return {...state, changeCharacter: true};\n      break;\n\n    case \"PAGE_LOADED\":\n      return {...state, isLoading: false};\n      break;\n\n    default:\n      return {isLoading: true, changeCharacter: false};\n  }\n};\n\nexport {pageStagesReducer};\n","import React, {useEffect, useReducer, useState} from \"react\";\n\nimport _ from \"lodash\";\n\n// components\nimport Header from \"../components/Header/Header\";\nimport Languages from \"../components/Languages/Languages\";\nimport Achievements from \"../components/Achievements/Achievements\";\nimport WorkExperience from \"../components/WorkExperience/WorkExperience\";\nimport Contacts from \"../components/Contacts/Contacts\";\nimport BufferingMode from \"../components/BufferingMode/BufferingMode\";\n\n// services\nimport {getRandomCharacter} from \"../services/characters\";\n\n// reducers\nimport {characterReducer} from \"../reducers/characterReducer\";\nimport {pageStagesReducer} from \"../reducers/pageStagesReducer\";\n\nimport classes from \"./MainDataShow.module.css\";\n\nimport \"../main.scss\";\n\nconst MainDataShow = (props) => {\n  const [developedBy, setDevelopedBy] = useState([]);\n  const [characterR, dispatchCharacterR] = useReducer(characterReducer, {});\n  const [pageStagesR, despatchPageStagesR] = useReducer(pageStagesReducer, {\n    isLoading: true,\n    changeCharacter: false,\n  });\n\n  const changeCharacterHandler = () => {\n    despatchPageStagesR({type: \"CHANGE_CHARACTER\"});\n    dispatchCharacterR({type: \"INIT_CHARACTER\", payload: props.character});\n  };\n\n  useEffect(() => {\n    despatchPageStagesR({type: \"INIT_PAGE\"});\n\n    getRandomCharacter().then((props) => {\n      dispatchCharacterR({type: \"INIT_CHARACTER\", payload: props.character});\n\n      setDevelopedBy(props.developedBy);\n\n      despatchPageStagesR({type: \"PAGE_LOADED\"});\n    });\n  }, [pageStagesR.changeCharacter]);\n\n  //\n  return (\n    <>\n      {\n        <>\n          <Header\n            nickname={characterR.nickname}\n            imageURI={characterR.image_uri}\n            specialtyDescription={characterR.specialty_description}\n            setChangeCharacter={changeCharacterHandler}\n            position={characterR.position}\n          />\n          <Languages languages={characterR.languages} />\n          <Achievements achievments={characterR.achievments} />\n          <WorkExperience workExperienceFromDb={characterR.workExperience} />\n          <Contacts\n            developedBy={developedBy}\n            contactsFromDb={characterR.contacts}\n          />\n        </>\n      }\n      {pageStagesR.isLoading && <BufferingMode classes={classes} />}\n    </>\n  );\n};\n\nexport default MainDataShow;\n","export function getRandomCharacter() {\n  return fetch(\n    \"https://us-central1-bsa-portfolio-api.cloudfunctions.net/character/random\"\n  ).then((data) => data.json());\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport MainDataShow from \"./components/MainDataShow\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainDataShow />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"MainDataShow_backdrop__1iaJt\"};"],"sourceRoot":""}